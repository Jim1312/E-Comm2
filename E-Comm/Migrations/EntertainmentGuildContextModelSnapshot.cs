// <auto-generated />
using System;
using E_Comm.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_Comm.Migrations
{
    [DbContext(typeof(EntertainmentGuildContext))]
    partial class EntertainmentGuildContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("E_Comm.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("customerID");

                    b.Property<int?>("CVV")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("CardOwner")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Expiry")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PatronId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Suburb")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.ToTable("TO", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("genreID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("GenreID");

                    b.ToTable("Genre", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("customer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PostCode")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Suburb")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("OrderID");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GenreID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Genre");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Published")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SubGenre")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GenreID");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.ProductsInOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProduktId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("produktId");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProduktId");

                    b.ToTable("ProductsInOrders", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Source", b =>
                {
                    b.Property<int>("SourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("sourceid");

                    b.Property<string>("ExternalLink")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GenreID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Genre");

                    b.Property<string>("Source_name")
                        .HasColumnType("TEXT");

                    b.HasKey("SourceId");

                    b.HasIndex("GenreID");

                    b.ToTable("Source", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Stocktake", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SourceId");

                    b.ToTable("Stocktake", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.User", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("HashPW")
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("isAdmin");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserName");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("E_Comm.Models.Order", b =>
                {
                    b.HasOne("E_Comm.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("E_Comm.Models.Product", b =>
                {
                    b.HasOne("E_Comm.Models.Genre", "Genre")
                        .WithMany("Products")
                        .HasForeignKey("GenreID");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("E_Comm.Models.ProductsInOrder", b =>
                {
                    b.HasOne("E_Comm.Models.Order", "Order")
                        .WithMany("ProductsInOrders")
                        .HasForeignKey("OrderId");

                    b.HasOne("E_Comm.Models.Stocktake", "Stocktake")
                        .WithMany("ProductsInOrders")
                        .HasForeignKey("ProduktId");

                    b.Navigation("Order");

                    b.Navigation("Stocktake");
                });

            modelBuilder.Entity("E_Comm.Models.Source", b =>
                {
                    b.HasOne("E_Comm.Models.Genre", "Genre")
                        .WithMany("Sources")
                        .HasForeignKey("GenreID");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("E_Comm.Models.Stocktake", b =>
                {
                    b.HasOne("E_Comm.Models.Product", "Product")
                        .WithMany("Stocktakes")
                        .HasForeignKey("ProductId");

                    b.HasOne("E_Comm.Models.Source", "Source")
                        .WithMany("Stocktakes")
                        .HasForeignKey("SourceId");

                    b.Navigation("Product");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("E_Comm.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("E_Comm.Models.Genre", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("Sources");
                });

            modelBuilder.Entity("E_Comm.Models.Order", b =>
                {
                    b.Navigation("ProductsInOrders");
                });

            modelBuilder.Entity("E_Comm.Models.Product", b =>
                {
                    b.Navigation("Stocktakes");
                });

            modelBuilder.Entity("E_Comm.Models.Source", b =>
                {
                    b.Navigation("Stocktakes");
                });

            modelBuilder.Entity("E_Comm.Models.Stocktake", b =>
                {
                    b.Navigation("ProductsInOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
