@model E_Comm.Models.Product
@{
    ViewData["Title"] = $"{Model.Name} - Product Details - 3B1G";
}

<div class="product-details-page">
    <div class="container-fluid px-4 py-4">
        <!-- Breadcrumb -->
            <nav aria-label="breadcrumb" class="mb-4">
            <ol class="breadcrumb-modern">
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Index", "Home")">
                        <i class="fas fa-home"></i>
                        <span>Home</span>
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="@Url.Action("Catalog", "Home")">
                        <i class="fas fa-search"></i>
                        <span>Catalog</span>
                        </a>
                    </li>
                <li class="breadcrumb-item active">
                    <span>Product Details</span>
                    </li>
                </ol>
            </nav> 

        <!-- Main Product Layout -->
        <div class="product-layout">
            <!-- Left Column - Product Image -->
            <div class="product-image-section">
                <div class="image-container">
                    @if (Model.ProductImage != null)
                    {
                        <div class="product-image-wrapper">
                            <img src="@Url.Action("GetProductImage", "Home", new { id = Model.ID })" 
                                 alt="@Model.Name" 
                                 class="product-image" />
                </div>
            }
                    else
                    {
                        <div class="product-placeholder">
                            @{
                                var genreName = Model.Genre?.Name?.ToLower() ?? "";
                                string iconClass = "fas fa-book";
                                string iconColor = "text-blue-400";
                                
                                if (genreName.Contains("movie") || genreName.Contains("film"))
                                {
                                    iconClass = "fas fa-film";
                                    iconColor = "text-red-400";
                                }
                                else if (genreName.Contains("game") || genreName.Contains("gaming"))
                                {
                                    iconClass = "fas fa-gamepad";
                                    iconColor = "text-green-400";
                                }
                                else if (genreName.Contains("music") || genreName.Contains("audio"))
                                {
                                    iconClass = "fas fa-music";
                                    iconColor = "text-yellow-400";
                                }
                            }
                            <i class="@iconClass @iconColor placeholder-icon"></i>
                        </div>
                    }
                        </div>
                        
                <!-- Product Features -->
                <div class="product-features">
                    <div class="feature-item">
                        <i class="fas fa-star text-yellow-400"></i>
                                <span>Premium Quality</span>
                            </div>
                    <div class="feature-item">
                        <i class="fas fa-shield-alt text-green-400"></i>
                                <span>Authentic Product</span>
                            </div>
                    <div class="feature-item">
                        <i class="fas fa-shipping-fast text-blue-400"></i>
                                <span>Fast Delivery</span>
                            </div>
                    <div class="feature-item">
                        <i class="fas fa-award text-purple-400"></i>
                                <span>Best Seller</span>
                            </div>
                        </div>
                    </div>

            <!-- Right Column - Product Information -->
            <div class="product-info-section">
                <!-- Genre Badge -->
                <div class="genre-badge">
                    <i class="fas fa-tag"></i>
                    @(Model.Genre?.Name ?? "Unknown Genre")
                </div>

                <!-- Product Title -->
                            <h1 class="product-title">@Model.Name</h1>

                <!-- Author -->
                @if (!string.IsNullOrEmpty(Model.Author))
                {
                            <div class="product-author">
                        <i class="fas fa-user"></i>
                                by <strong>@Model.Author</strong>
                            </div>
                }

                <!-- Description -->
                <div class="product-description">
                    <h3>Description</h3>
                    <p>@(Model.Description ?? "No description available for this product.")</p>
                        </div>

                <!-- Price and Stock -->
                <div class="price-stock-section">
                            @if (Model.Stocktakes?.Any() == true)
                            {
                                var stocktake = Model.Stocktakes.First();
                        <div class="price-info">
                                    <div class="current-price">
                                        $@String.Format("{0:F2}", stocktake.Price ?? 0)
                                    </div>
                            <div class="stock-status @(stocktake.Quantity > 0 ? "in-stock" : "out-of-stock")">
                                <i class="fas @(stocktake.Quantity > 0 ? "fa-check-circle" : "fa-times-circle")"></i>
                                @(stocktake.Quantity > 0 ? $"{stocktake.Quantity} in stock" : "Out of stock")
                                    </div>
                                </div>

                                @if (stocktake.Source != null)
                                {
                            <div class="source-info">
                                <i class="fas fa-store"></i>
                                            Available from: <strong>@stocktake.Source.Source_name</strong>
                                    </div>
                                }
                            }
                            else
                            {
                        <div class="price-info">
                            <div class="current-price unavailable">Price unavailable</div>
                            <div class="stock-status out-of-stock">
                                <i class="fas fa-times-circle"></i>
                                            Currently unavailable
                                    </div>
                                </div>
                            }
                        </div>

                        <!-- Action Buttons -->
                <div class="action-section">
                            @if (User.Identity?.IsAuthenticated == true && (User.IsInRole("Customer") || User.IsInRole("Admin")))
                            {
                                @if (Model.Stocktakes?.Any(s => s.Quantity > 0) == true)
                                {
                            <div class="quantity-selector">
                                <label>Quantity:</label>
                                            <div class="quantity-controls">
                                    <button type="button" class="qty-btn minus" onclick="decreaseQuantity()">-</button>
                                    <input type="number" id="quantity" value="1" min="1" max="@Model.Stocktakes.First().Quantity" readonly>
                                    <button type="button" class="qty-btn plus" onclick="increaseQuantity()">+</button>
                                            </div>
                                        </div>
                            
                            <div class="action-buttons">
                                <button class="btn-primary-action" onclick="addToCartWithQuantity(@Model.ID)">
                                    <i class="fas fa-shopping-cart"></i>
                                    Add to Cart
                                </button>
                            </div>
                                }
                                else
                                {
                            <div class="action-buttons">
                                <button class="btn-disabled" disabled>
                                    <i class="fas fa-times"></i>
                                    Currently Unavailable
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="action-buttons">
                            <a href="@Url.Action("Login", "Auth")" class="btn-primary-action">
                                <i class="fas fa-sign-in-alt"></i>
                                Login to Purchase
                            </a>
                            <a href="@Url.Action("Signup", "Auth")" class="btn-secondary-action">
                                <i class="fas fa-user-plus"></i>
                                Create Account
                                    </a>
                                </div>
                            }
            </div>

                <!-- Product Details -->
                <div class="product-details-info">
                    <h3>Product Details</h3>
                                    <div class="details-grid">
                        <div class="detail-row">
                                            <span class="detail-label">Product ID:</span>
                                            <span class="detail-value">#@Model.ID</span>
                                        </div>
                        <div class="detail-row">
                                            <span class="detail-label">Genre:</span>
                                            <span class="detail-value">@(Model.Genre?.Name ?? "Unknown")</span>
                                        </div>
                                        @if (Model.Published.HasValue)
                                        {
                            <div class="detail-row">
                                                <span class="detail-label">Published:</span>
                                                <span class="detail-value">@Model.Published.Value.ToString("MMMM yyyy")</span>
                                            </div>
                                        }
                                        @if (Model.LastUpdated.HasValue)
                                        {
                            <div class="detail-row">
                                                <span class="detail-label">Last Updated:</span>
                                                <span class="detail-value">@Model.LastUpdated.Value.ToString("MMM dd, yyyy")</span>
                                            </div>
                                        }
                        </div>
                    </div>
                </div>
            </div>

        <!-- Back Button -->
        <div class="back-section">
            <a href="@Url.Action("Catalog", "Home")" class="btn-back">
                <i class="fas fa-arrow-left"></i>
                Back to Catalog
            </a>
        </div>
    </div>
</div>

<style>
/* Modern Product Details Page - Black & White Shadcn Style */
.product-details-page {
    min-height: 100vh;
    background: #000000;
    color: #ffffff;
}

.breadcrumb-modern {
    display: flex;
    list-style: none;
    padding: 1rem;
    margin: 0;
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-radius: 8px;
    align-items: center;
    flex-wrap: wrap;
}

.breadcrumb-modern .breadcrumb-item {
    display: flex;
    align-items: center;
}

.breadcrumb-modern .breadcrumb-item a {
    color: #a1a1aa;
    text-decoration: none;
    transition: color 0.2s;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-weight: 500;
}

.breadcrumb-modern .breadcrumb-item a:hover {
    color: #ffffff;
    background: #1a1a1a;
}

.breadcrumb-modern .breadcrumb-item.active {
    color: #ffffff;
    font-weight: 600;
    padding: 0.25rem 0.5rem;
}

.breadcrumb-modern .breadcrumb-item:not(:last-child)::after {
    content: '/';
    color: #4a4a4a;
    margin: 0 0.75rem;
    font-weight: 400;
}

.breadcrumb-modern .breadcrumb-item a i {
    font-size: 0.875rem;
}

.breadcrumb-modern .breadcrumb-item a span,
.breadcrumb-modern .breadcrumb-item.active span {
    font-size: 0.875rem;
}

/* Main Product Layout */
.product-layout {
    display: grid;
    grid-template-columns: 400px 1fr;
    gap: 3rem;
    max-width: 1200px;
    margin: 0 auto;
}

/* Left Column - Image Section */
.product-image-section {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.image-container {
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-radius: 12px;
    padding: 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    min-height: 400px;
}

.product-image-wrapper {
    width: 100%;
    max-width: 350px;
    aspect-ratio: 1;
    border-radius: 8px;
    overflow: hidden;
    border: 1px solid #27272a;
}

.product-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
}

.product-image:hover {
    transform: scale(1.02);
}

.product-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 350px;
    aspect-ratio: 1;
    background: #1a1a1a;
    border: 1px solid #27272a;
    border-radius: 8px;
}

.placeholder-icon {
    font-size: 4rem;
    opacity: 0.5;
}

/* Product Features */
.product-features {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0.75rem;
}

.feature-item {
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-radius: 8px;
    padding: 0.75rem;
    text-align: center;
    font-size: 0.875rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
}

.feature-item:hover {
    border-color: #ffffff;
    background: #1a1a1a;
}

.feature-item i {
    font-size: 1.25rem;
}

/* Right Column - Product Information */
.product-info-section {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.genre-badge {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    background: #1a1a1a;
    color: #ffffff;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
    border: 1px solid #27272a;
    width: fit-content;
}

.product-title {
    font-size: 2.5rem;
    font-weight: 700;
    color: #ffffff;
    margin: 0;
    line-height: 1.2;
}

.product-author {
    color: #a1a1aa;
    font-size: 1.125rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.product-description h3 {
    color: #ffffff;
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
    border-bottom: 1px solid #27272a;
    padding-bottom: 0.5rem;
}

.product-description p {
    color: #d4d4d8;
    line-height: 1.6;
    margin: 0;
}

/* Price and Stock Section */
.price-stock-section {
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-radius: 12px;
    padding: 1.5rem;
}

.price-info {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin-bottom: 1rem;
}

.current-price {
    font-size: 2rem;
    font-weight: 700;
    color: #ffffff;
}

.current-price.unavailable {
    color: #71717a;
}

.stock-status {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 500;
}

.stock-status.in-stock {
    color: #22c55e;
}

.stock-status.out-of-stock {
    color: #ef4444;
}

.source-info {
    color: #a1a1aa;
    font-size: 0.875rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

/* Action Section */
.quantity-selector {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.quantity-selector label {
    font-weight: 500;
    color: #ffffff;
}

.quantity-controls {
    display: flex;
    align-items: center;
    gap: 0;
    width: fit-content;
}

.qty-btn {
    background: #1a1a1a;
    border: 1px solid #27272a;
    color: #ffffff;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
    font-weight: 600;
}

.qty-btn:hover {
    background: #27272a;
    border-color: #ffffff;
}

.qty-btn.minus {
    border-radius: 6px 0 0 6px;
    border-right: none;
}

.qty-btn.plus {
    border-radius: 0 6px 6px 0;
    border-left: none;
}

.quantity-controls input {
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-left: none;
    border-right: none;
    color: #ffffff;
    width: 60px;
    height: 40px;
    text-align: center;
    font-weight: 500;
}

.action-buttons {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.btn-primary-action,
.btn-secondary-action,
.btn-disabled,
.btn-back {
    padding: 1rem 2rem;
    border-radius: 8px;
    font-weight: 600;
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    transition: all 0.2s ease;
    border: 1px solid;
    cursor: pointer;
    font-size: 1rem;
    min-width: 200px;
    justify-content: center;
}

.btn-primary-action {
    background: #ffffff;
    color: #000000;
    border-color: #ffffff;
    width: 100%;
    max-width: 300px;
}

.btn-primary-action:hover {
    background: #e5e5e5;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(255, 255, 255, 0.1);
}

.btn-secondary-action {
    background: transparent;
    color: #ffffff;
    border-color: #27272a;
    flex: 1;
    justify-content: center;
}

.btn-secondary-action:hover {
    background: #1a1a1a;
    border-color: #ffffff;
}

.btn-disabled {
    background: #1a1a1a;
    color: #71717a;
    border-color: #27272a;
    cursor: not-allowed;
    flex: 1;
    justify-content: center;
}

.btn-back {
    background: transparent;
    color: #a1a1aa;
    border-color: #27272a;
}

.btn-back:hover {
    color: #ffffff;
    border-color: #ffffff;
}

/* Product Details Info */
.product-details-info h3 {
    color: #ffffff;
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 1rem;
    border-bottom: 1px solid #27272a;
    padding-bottom: 0.5rem;
}

.details-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
}

.detail-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0.75rem;
    background: #0a0a0a;
    border: 1px solid #27272a;
    border-radius: 6px;
}

.detail-label {
    color: #a1a1aa;
    font-weight: 500;
}

.detail-value {
    color: #ffffff;
    font-weight: 600;
}

.back-section {
    margin-top: 3rem;
    text-align: center;
}

/* Color Classes */
.text-blue-400 { color: #60a5fa; }
.text-red-400 { color: #f87171; }
.text-green-400 { color: #4ade80; }
.text-yellow-400 { color: #facc15; }
.text-purple-400 { color: #c084fc; }

/* Responsive Design */
/* Medium screens and down */
@@media screen and (max-width: 992px) {
    .product-layout {
        grid-template-columns: 1fr;
        gap: 2rem;
    }
    
    .product-image-section {
        order: 1;
    }
    
    .product-info-section {
        order: 2;
    }
    
    .image-container {
        min-height: 300px;
    }
    
    .product-image-wrapper {
        max-width: 280px;
    }
    
    .product-placeholder {
        width: 280px;
    }
}

/* Small screens */
@@media screen and (max-width: 768px) {
    .container-fluid {
        padding-left: 1rem !important;
        padding-right: 1rem !important;
    }
    
    .product-title {
        font-size: 2rem;
    }
    
    .price-info {
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
    }
    
    .action-buttons {
        flex-direction: column;
    }
    
    .btn-primary-action,
    .btn-secondary-action,
    .btn-disabled {
        flex: none;
        width: 100%;
    }
    
    .product-features {
        grid-template-columns: 1fr;
    }
}
</style>

@section Scripts {
    <script>
        function increaseQuantity() {
            const input = document.getElementById('quantity');
            const max = parseInt(input.getAttribute('max'));
            const current = parseInt(input.value);
            if (current < max) {
                input.value = current + 1;
            }
        }

        function decreaseQuantity() {
            const input = document.getElementById('quantity');
            const min = parseInt(input.getAttribute('min'));
            const current = parseInt(input.value);
            if (current > min) {
                input.value = current - 1;
            }
        }

        function addToCartWithQuantity(productId) {
            const quantityInput = document.getElementById('quantity');
            const quantity = quantityInput ? parseInt(quantityInput.value) : 1;
            const button = event.target.closest('button');
            const originalContent = button.innerHTML;
            
            button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Adding...';
            button.disabled = true;

            fetch('/Customer/AddToCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: `productId=${productId}&quantity=${quantity}`
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    button.innerHTML = '<i class="fas fa-check"></i> Added!';
                    button.style.background = '#22c55e';
                    
                    // Refresh the page after 1 second to update cart indicator
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    alert('Error: ' + data.message);
                    button.innerHTML = originalContent;
                    button.disabled = false;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred. Please try again.');
                button.innerHTML = originalContent;
                button.disabled = false;
            });
        }
    </script>
} 